= Monte Carlo Method To Estimate Pi

=== A method to Estimate pi (3.14...)

https://ko.wikipedia.org/wiki/%EB%AA%AC%ED%85%8C%EC%B9%B4%EB%A5%BC%EB%A1%9C_%EB%B0%A9%EB%B2%95[몬테카를로 방법(Monte Carlo method)]은 난수를 이용하여 함수의 값을 확률적으로 계산하는 알고리즘을 부르는 용어이다. 수학이나 물리학 등에 자주 사용되며, 계산하려는 값이 닫힌 형식으로 표현되지 않거나 복잡한 경우에 근사적으로 계산할 때 사용된다. 스타니스와프 울람이 모나코의 유명한 도박의 도시 몬테카를로의 이름을 본따 명명하였다.



Ratio between the surfaces of 1/4 of a circle and 1/4 of a square:

image::../static/img/week1/monte-1.png[]

=== Sequential Code for Sampling Pi

[source,scala]
----
import scala.util.Random

def mcCount(iter: Int): Int = {
  val randomX = new Random
  val randomY = new Random
  var hits = 0
  for (i <- 0 until iter) {
    val x = randomX.nextDouble
    val y = randomY.nextDouble
    if (x*x + y*y < 1) hits = hits + 1
  }
  hits
}

def monteCarloPiSeq(iter: Int): Double = 4.0 * mcCount(iter) / iter
----


=== Four-Way Parallel Code for Sampling Pi

[source,scala]
----
def monteCarloPiPar(iter:Int): Double = {
  val ((pi1, pi2), (pi3, pi4)) = parallel(
  parallel(mcCount(iter/4), mcCount(iter/4)),
  parallel(mcCount(iter/4), mcCount(iter - 3*(iter/4))))

  4.0 * (pi1 + pi2 + pi3 + pi4) / iter
}
----
